// Mocks generated by Mockito 5.0.10 from annotations
// in delvetro_erp/test/app/modules/cadastro_estoque/cadastro_estoque_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:delvetro_erp/app/modules/cadastro-estoque/repositories/cadastro_estoque_repository_interface.dart'
    as _i2;
import 'package:delvetro_erp/app/shared/models/itens_estoque_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [ICadastroEstoqueRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockICadastroEstoqueRepository extends _i1.Mock
    implements _i2.ICadastroEstoqueRepository {
  MockICadastroEstoqueRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> salvarItem(_i4.ItensEstoqueModel? itensEstoque) =>
      (super.noSuchMethod(Invocation.method(#salvarItem, [itensEstoque]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> atualizarItem(_i4.ItensEstoqueModel? itensEstoque) =>
      (super.noSuchMethod(Invocation.method(#atualizarItem, [itensEstoque]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.ItensEstoqueModel>> getListaItensEstoque() =>
      (super.noSuchMethod(Invocation.method(#getListaItensEstoque, []),
              returnValue: Future<List<_i4.ItensEstoqueModel>>.value(
                  <_i4.ItensEstoqueModel>[]))
          as _i3.Future<List<_i4.ItensEstoqueModel>>);
}

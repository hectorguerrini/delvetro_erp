// Mocks generated by Mockito 5.0.10 from annotations
// in delvetro_erp/test/app/modules/cadastro-produtos/cadastro_produtos_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:delvetro_erp/app/modules/cadastro-produtos/models/produtos_model.dart'
    as _i4;
import 'package:delvetro_erp/app/modules/cadastro-produtos/models/tipo_servico_estoque_model.dart'
    as _i5;
import 'package:delvetro_erp/app/modules/cadastro-produtos/repositories/cadastro_produtos_repository_interface.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [ICadastroProdutosRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockICadastroProdutosRepository extends _i1.Mock
    implements _i2.ICadastroProdutosRepository {
  MockICadastroProdutosRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> salvarProduto(_i4.ProdutosModel? itensEstoque) =>
      (super.noSuchMethod(Invocation.method(#salvarProduto, [itensEstoque]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> atualizarProduto(_i4.ProdutosModel? itensEstoque) =>
      (super.noSuchMethod(Invocation.method(#atualizarProduto, [itensEstoque]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.ProdutosModel>> getListaProdutos() =>
      (super.noSuchMethod(Invocation.method(#getListaProdutos, []),
              returnValue:
                  Future<List<_i4.ProdutosModel>>.value(<_i4.ProdutosModel>[]))
          as _i3.Future<List<_i4.ProdutosModel>>);
  @override
  _i3.Future<List<_i5.TipoServicoEstoqueModel>> getListaServicos() =>
      (super.noSuchMethod(Invocation.method(#getListaServicos, []),
              returnValue: Future<List<_i5.TipoServicoEstoqueModel>>.value(
                  <_i5.TipoServicoEstoqueModel>[]))
          as _i3.Future<List<_i5.TipoServicoEstoqueModel>>);
}
